/*
 * Gui.java
 *
 * Created on 01 February 2008, 09:59
 */

package net.intrenetchat;

import java.awt.*;
import javax.swing.*;



/**
 * This is the class for the main gui
 * @author  Philip White
 */
public class Gui extends javax.swing.JFrame {
    private volatile static Gui instance; 
    private DefaultListModel listmodel;
    private AudioWarnings audio;
    private Network net;
    private Settings set;
    private Saving save;
    private About ab;
    private PrivateArray privateL;
    private FriendList friends;
    private String history = "";
    private boolean min = true;
    
    private Gui() {
        privateL = PrivateArray.getInstance();
        listmodel = new DefaultListModel();
        this.setTitle("IntraNet Chat");
        net = Network.getInstance();
        save = Saving.getInstance();
        friends = FriendList.getInstance();
        audio = AudioWarnings.getInstance();
        this.setLocation(save.getX(),save.getY());
        initComponents();
        Hostname.setText(save.getName());
        this.setFont();
        this.setBackColour();
        this.setFontColour();
        this.setLF();
    }
    
    /**
     * returns an instance of the Gui
     * @return A unique instance of the gui class
     */
    public static Gui getInstance(){
        if (instance == null) {
            synchronized (Gui.class) {
                instance = new Gui();
            }
        }
        return instance;
    }
    
    public void setWindowsState(int i){
        if(i == 0){
            this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }else{
            this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            min = false;
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        userList.setModel(listmodel);
        SendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Incoming = new javax.swing.JTextArea();
        Hostname = new javax.swing.JTextField();
        Output = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Clear = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        options = new javax.swing.JMenu();
        Settings = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        userList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(userList);

        SendButton.setText("Send");
        SendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SendButtonMousePressed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        Incoming.setColumns(20);
        Incoming.setEditable(false);
        Incoming.setLineWrap(true);
        Incoming.setRows(5);
        Incoming.setWrapStyleWord(true);
        jScrollPane1.setViewportView(Incoming);

        Hostname.setEditable(false);

        Output.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                OutputKeyPressed(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        Clear.setText("Clear Screen");
        Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ClearMousePressed(evt);
            }
        });
        jMenu1.add(Clear);

        jMenuItem1.setText("Close Window");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExitMousePressed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        options.setText("Options");

        Settings.setText("Preferences");
        Settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SettingsMousePressed(evt);
            }
        });
        options.add(Settings);

        jMenuBar1.add(options);

        help.setText("Help");

        About.setText("About");
        About.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AboutMousePressed(evt);
            }
        });
        help.add(About);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(Hostname, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hostname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        save.setX(this.getX());
        save.setY(this.getY());
        if(save.getChatHist() == 1){
            save.saveChat(history);
        }
        if(!min){
            net.sendMulticast("~2~"+save.getName()+"~3~");
        }
        save.saveVariables();
        save.saveLocation();
    }//GEN-LAST:event_formWindowClosing

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed
        
    }//GEN-LAST:event_jMenu1MousePressed

    private void AboutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AboutMousePressed
        save.setX(this.getX());
        save.setY(this.getY());
        ab = new About(this, true,save.getX()+50,save.getY()+20);
        ab.setVisible(true);
    }//GEN-LAST:event_AboutMousePressed

    private void SettingsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingsMousePressed
        save.setX(this.getX());
        save.setY(this.getY());
        set = new Settings(this, true, save);
        if(set.isSafe()){
            save.setPort(set.getPort());
            if(set.getHostName().compareTo("")!= 0){
                save.setName(set.getHostName());
            }
            Hostname.setText(save.getName());
            save.setX(this.getX());
            save.setY(this.getY());
            save.setEnc(set.getEncChat());
            save.setChatHist(set.getChatHist());
            save.setPriChatHist(set.getPrivChat());
            save.saveVariables();
            save.setBack(set.getBackColor());
            save.setFront(set.getFontColor());
            save.setFont(set.getFontName());
            save.setFontSize(set.getFontSize());
            save.setLookAndFeel(set.getLF());
            save.setVariableLoc(set.getVarLoc());
            save.setAudioMess(set.getMessageSound());
            save.setAudioUser(set.getUserSound());
            this.setFont();
            this.setBackColour();
            this.setFontColour();
            this.setLF();
            net.sendMulticast("~2~"+save.getName()+"~2~");
        }
        
    }//GEN-LAST:event_SettingsMousePressed

    private void ExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMousePressed
       save.setX(this.getX());
       save.setY(this.getY());
       if(save.getChatHist()==1){
            save.saveChat(history);
       }
       save.saveVariables();
       save.saveLocation();
       net.sendMulticast("~2~"+save.getName()+"~3~");
       System.exit(0);
    }//GEN-LAST:event_ExitMousePressed

    /**
     * Listener for send button
     * @param evt Listener
     */
    private void SendButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendButtonMousePressed
        this.send();
    }//GEN-LAST:event_SendButtonMousePressed

    private void ClearMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearMousePressed
        Incoming.setText("");
    }//GEN-LAST:event_ClearMousePressed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
       this.setVisible(false);
       if(!min){
           System.exit(0);
       }
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void userListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseClicked
        String name = (String)userList.getSelectedValue();
        String compname = friends.getCompName(name);
        if(name.compareTo(save.getName())!=0){
            privateL.connect(compname, name);
        }
        
}//GEN-LAST:event_userListMouseClicked

    private void OutputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OutputKeyPressed
        if(evt.getKeyChar()==evt.VK_ENTER){
            this.send();
        }
    }//GEN-LAST:event_OutputKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JMenuItem Clear;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JTextField Hostname;
    private javax.swing.JTextArea Incoming;
    private javax.swing.JTextField Output;
    private javax.swing.JButton SendButton;
    private javax.swing.JMenuItem Settings;
    private javax.swing.JMenu help;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu options;
    private javax.swing.JList userList;
    // End of variables declaration//GEN-END:variables
    
    private void send(){
        String out = Output.getText();
        String name = save.getName();
        out = "~1~"+name+"~"+out+"~";
        net.sendMulticast(out);
        Output.setText("");
    }
    
    /**
     * Displays a message on the users screen
     * @param mes Incoming message
     */
    public void addMessage(String mes){
        Incoming.append(mes+"\n");
        history += mes+"\n";
        Incoming.setCaretPosition(Incoming.getDocument().getLength());
        if(!this.isVisible()){
            audio.newMessageIncoming();
        }
    }
    
    /**
     * Adds a new user to the friend list on the gui
     * @param compname Users unique computer name
     * @param uname  Users username
     */
    public void addUser(String compname ,String uname){
        if(friends.checkFriend(compname)== false){
            friends.addfriend(compname, uname);
            listmodel.addElement(uname);
            if(!this.isVisible()){
                audio.newUserEntered();
            }
        }else{
            listmodel.removeElement(friends.getHost(compname));
            friends.changeUsername(compname, uname);
            listmodel.addElement(uname);
        }
    }
    
    /**
     * Removes a user from the friend list on the gui
     * @param compname Users unique computer name
     * @param uname Users username
     */
    public void removeUser(String compname,String uname){
        listmodel.removeElement(uname);
        friends.removeFriend(compname);
    }
    
    /**
     * Sets the blackground colour
     */
    public void setBackColour(){
        String color = save.getBack();
        Color c = this.getColor(color);
        userList.setBackground(c);
        Incoming.setBackground(c);
        Output.setBackground(c);
        Hostname.setBackground(c);
    }
    
    /**
     * Sets the font
     */
    public void setFont(){
        int style = 0;
        Font f = new Font(save.getFont(),style,save.getFontSize());
        Incoming.setFont(f);
        Output.setFont(f);
        f = new Font(save.getFont(),style,12);
        userList.setFont(f);
        Hostname.setFont(f);
    }
    
    /**
     * Sets the font colour
     */
    public void setFontColour(){
        String colour = save.getFront();
        Color c = this.getColor(colour);
            userList.setForeground(c);
            Incoming.setForeground(c);
            Output.setForeground(c);
            Hostname.setForeground(c);   
    }
    
    private Color getColor(String name){
        Color c = null;
        if(name.compareTo("WHITE")==0){
            c = Color.WHITE;
        }else if(name.compareTo("BLACK")==0){
            c = Color.BLACK;
        }else if(name.compareTo("GREEN")==0){
            c = Color.GREEN;
        }else if(name.compareTo("BLUE")==0){
            c = Color.BLUE;
        }else if(name.compareTo("YELLOW")==0){
            c = Color.YELLOW;
        }else if(name.compareTo("RED")==0){
            c = Color.RED;
        }else if(name.compareTo("ORANGE")==0){
            c = Color.ORANGE;
        }
        return c;
    }
    
    private void setLF(){
        String name = save.getLookAndFeel();
        UIManager.LookAndFeelInfo plaf[] = UIManager.getInstalledLookAndFeels();
        for (int i = 0, n = plaf.length; i < n; i++) {
            if(plaf[i].getName().compareTo(name)==0){
                try{
                    UIManager.setLookAndFeel(plaf[i].getClassName());
                    SwingUtilities.updateComponentTreeUI(this);
                }catch(Exception e){}
            }
        }   
    }
}
